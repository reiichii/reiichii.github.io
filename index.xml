<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>日々のあれこれφ(．．)</title><link>https://reiichii.github.io/</link><description>Recent content on 日々のあれこれφ(．．)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Jun 2022 20:56:13 +0900</lastBuildDate><atom:link href="https://reiichii.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>ISUCON12事前講習</title><link>https://reiichii.github.io/post/2022-06-07-20/</link><pubDate>Tue, 07 Jun 2022 20:56:13 +0900</pubDate><guid>https://reiichii.github.io/post/2022-06-07-20/</guid><description>&lt;p>ISUCONハンズオン目的で申し込んだのですが、去年一昨年の事前講習レポートには書いていない内容が盛り込まれていて普通に楽しかったです。&lt;/p>
&lt;p>&lt;a class="link" href="https://speakerdeck.com/rosylilly/isucon12-shi-qian-jiang-xi" target="_blank" rel="noopener"
>ISUCON12 事前講習 - Speaker Deck&lt;/a>&lt;/p>
&lt;p>ほぼ資料に書いてあるのですが、記念に手元のメモも残します。&lt;/p>
&lt;pre tabindex="0">&lt;code>## 強いチームがしていること
* なんとなくで手を動かさない。
- 優勝者インタビューで「何が効いたのかわからない」というチームはいない
* デプロイのリードタイムをに1分以上かけない
- GUIでgit操作しがちなご時世だけど、gitコマンドを使った方がいいよ
* 使い慣れたミドルウェアのconfigを1から書かない
- 事前に用意しておく
* やったことがないことをやらない
- 大会中に実務で触っていないgoに移植しようとしてボロ負けした経験がある
&lt;/code>&lt;/pre>&lt;p>なんとなく手を動かすな、仮説をベースに動くことはisucon以外の仕事でも言える。&lt;/p>
&lt;pre tabindex="0">&lt;code>## タイムライン
10:00
* マニュアルとレギュレーションを読む
* ブラウザでサービスを見て、アプリケーションを把握する
* 各コンポートネントがどう起動されているか、設定やconfigの場所を確認
- init.dかsystemcnfかdockerかなど
* 自分が必要なruntimeをさっとインストールできるようにしておく
* dbスキーマがどう定義されているか調べる
* デプロイ方法を構築する
* 使われているミドルウェアの種類とバージョンを調べる
- 過去にmemcacheかと思ったらmemcacheのplaginを入れたmysqlでそれがすごく重い、という罠があったらしい
* 使っているサーバのスペックを各台調査する
- サーバによってスペックが異なるケースがある
* ベンチマークを実行する
11:00
* 得点源が何かを確認する
* 減点の要因を把握する
* プロファイリングツールを入れる
* 初期状態の完全なバックアップを作成する
- tarで固めておく
12:00
* ちゃんとご飯を食べる
* わからないことが出たらリストにしておく
* やること、やらないことを明確にする
13:00
* デプロイが1コマンドでできるように
* デプロイ→性能計測→プロファイルまで一気通貫で行える仕組みを用意しておく
- line_profile
- リクエスト単位　どちらも
14:00~17:00
* 1コミット1ベンチマーク
* 気にする指標を明確に把握してプロファイルする
17:00
* 再起動試験をする
* apmを入れていたら停止する
- newrelicのapm止めるの意外と難しかったりする
* デバックログの出力を止める
* プロファイル用に差し込んだものを止める
18:00
* 作業ログをブログに書く準備をする
* 記憶が明確な間に振り返りをする
&lt;/code>&lt;/pre>&lt;p>優勝経験チームの行動をトレスしたタイムラインは、考え方など参考にできるところが多い貴重な資料です。&lt;/p>
&lt;p>前にisucon11予選過去問に挑戦した時、私の場合マニュアルとレギュレーションを読むだけで1時間はかかったので10:00代きっっっつて思いながら聞いていました🙂&lt;/p>
&lt;pre tabindex="0">&lt;code>### おすすめの練習
* デプロイ方法セットアップ
- リポジトリ作って、git initして、チェックインして、deploy
* ansibleを最速で回せるようになっておく
* ベンチマークから集計を1コマンドでできるようにする
- 集計スクリプトを作っておく
* サーバの役割変更
- 起動を止める(systemctlならdisableし忘れない)、接続先を変更する
* 使いたいツールのインストール
- 使いたいツールは一発で入れられるようにする(alp,pt-query-digest)
- prebuilt binaryが用意できるなら用意するのも手
&lt;/code>&lt;/pre>&lt;p>もし今年出れるなら、最低限これだけは準備していきたい。&lt;/p>
&lt;p>また最後に同じ問題5回くらい解くと、新しい発見があって楽しいよといったこともあって、また過去問解き直そうと思いました。&lt;/p>
&lt;p>ちなみにまだ参加申し込みできていませんorz&lt;/p></description></item><item><title>キーマップ変更する時の手順</title><link>https://reiichii.github.io/post/2022-06-05-16/</link><pubDate>Sun, 05 Jun 2022 16:19:27 +0900</pubDate><guid>https://reiichii.github.io/post/2022-06-05-16/</guid><description>&lt;img src="https://reiichii.github.io/post/2022-06-05-16/img_keymap.png" alt="Featured image of post キーマップ変更する時の手順" />&lt;p>&lt;img src="https://reiichii.github.io/post/2022-06-05-16/img_keymap.png"
width="720"
height="720"
srcset="https://reiichii.github.io/post/2022-06-05-16/img_keymap_hu50b55d9f2e639c377323533322f7b495_75174_480x0_resize_box_3.png 480w, https://reiichii.github.io/post/2022-06-05-16/img_keymap_hu50b55d9f2e639c377323533322f7b495_75174_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="新しいキーマップ。大体端のものを真ん中に寄せているだけ"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;p>1年ほど前にこしらえた自作キーボードでpc作業を行なっています。&lt;/p>
&lt;p>久しぶりにキーマップを変えようと思ったらびっくりするくらいやり方を忘れており、思い出すのに結構時間が掛かったため未来の自分用に忘備録としてやり方を残しておきます。&lt;/p>
&lt;p>&lt;a class="link" href="https://reiichii.hateblo.jp/entry/2021/05/04/210513" target="_blank" rel="noopener"
>【自作キーボード】Sparrow62を組み立てた&lt;/a>&lt;/p>
&lt;h2 id="やること">やること&lt;/h2>
&lt;ul>
&lt;li>キーマップの設計&lt;/li>
&lt;li>キーボードのfirmwareに書き込む&lt;/li>
&lt;/ul>
&lt;h3 id="キーマップの設計">キーマップの設計&lt;/h3>
&lt;p>キーマップの設計は、&lt;a class="link" href="https://config.qmk.fm/#/sparrow62/LAYOUT" target="_blank" rel="noopener"
>QMK Configurator&lt;/a>というWebアプリからGUIで行います。&lt;/p>
&lt;ol>
&lt;li>前の設定を読み込ませる
&lt;ul>
&lt;li>KEYBOARDを自分が使っているものに選択する&lt;/li>
&lt;li>urlからjsonをアップロードするボタンを押下し、keymap.json（以前の設定時にexportしておいたもの）のrowファイルのurlを読み込ませる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>画面ぽちぽちでキーマップの配置を変更する&lt;/li>
&lt;li>右上のCOMPILEボタンを押下する&lt;/li>
&lt;li>右下のFIRMWAREボタンを押下し、hexファイルをダウンロードする&lt;/li>
&lt;/ol>
&lt;p>後の作業のために、この画面はまだ閉じないでおく。&lt;/p>
&lt;p>参考：&lt;a class="link" href="https://salicylic-acid3.hatenablog.com/entry/qmk-configurator" target="_blank" rel="noopener"
>（初心者編）QMK Configuratorを使ってキーマップを書き換えよう - 自作キーボード温泉街の歩き方&lt;/a>&lt;/p>
&lt;h3 id="キーボードのfirmwareに書き込む">キーボードのfirmwareに書き込む&lt;/h3>
&lt;p>ローカルPCにインストール済みのQMK Toolboxに先ほどのhexファイルを読み込ませ、キーボードのfirmwareに書き込みます。キーボードは左右繋げたままにして、左右それぞれに書き込みをします。&lt;/p>
&lt;ol>
&lt;li>QMK Toolboxを開く&lt;/li>
&lt;li>先ほどダウンロードしたhexファイルを読み込ませる&lt;/li>
&lt;li>autoreloadにチェックをする&lt;/li>
&lt;li>キーボードのリセットボタンを1度押下する
&lt;ul>
&lt;li>書き込みが始まり、「done. thank you. disconnect」の文言が出たら無事成功&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>反対のキーボードにケーブルを差し、3と4を行う&lt;/li>
&lt;/ol>
&lt;p>QMK ConfiguratorのTEST KEYBOARDでキーボードのボタンに意図した変更が反映されていることを確認する。&lt;/p>
&lt;p>参考：&lt;a class="link" href="https://salicylic-acid3.hatenablog.com/entry/qmk-toolbox" target="_blank" rel="noopener"
>（初心者編）自作キーボードにファームウェアを書き込む - 自作キーボード温泉街の歩き方&lt;/a>&lt;/p>
&lt;h3 id="後片付け">後片付け&lt;/h3>
&lt;ul>
&lt;li>QMK Configuratorでjsonファイルをexportしておく（次回また読み込ませるため）&lt;/li>
&lt;li>PRINT KEYMAPで画像をスクショしておく（稀にボタンの配置がどうなっていたのか見返したくなるため）&lt;/li>
&lt;li>上記をkeymapリポジトリに反映させておく&lt;/li>
&lt;/ul>
&lt;h2 id="おわりに">おわりに&lt;/h2>
&lt;p>初回は設定で精一杯で運用(?)のことを全然考えていなかったので、「あれjsonファイル出力してたっけ」「キーマップの画像をスクショしておいたはずなんだけどどこやったっけ」なんてわたわたしていました。githubに上げておけば家からでも会社からでもキーマップ確認できるし、これできっと一安心😌&lt;/p></description></item><item><title>About</title><link>https://reiichii.github.io/page/about/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://reiichii.github.io/page/about/</guid><description>&lt;p>日々のあれこれを忘れないようにするためのブログです。&lt;br>
ジャンルは絞らず、気の向くままに続けていけたらと思っています。&lt;/p>
&lt;p>&lt;a class="link" href="https://reiichii.hateblo.jp/" target="_blank" rel="noopener"
>旧ブログ（はてなブログ）&lt;/a>&lt;/p></description></item><item><title>ブログ引っ越した</title><link>https://reiichii.github.io/post/2022-05-27-16/</link><pubDate>Fri, 27 May 2022 17:01:55 +0900</pubDate><guid>https://reiichii.github.io/post/2022-05-27-16/</guid><description>&lt;img src="https://reiichii.github.io/post/2022-05-27-16/IMG_8179.jpg" alt="Featured image of post ブログ引っ越した" />&lt;p>はてなからHugoで立てたブログに引っ越しました。&lt;/p>
&lt;p>大きな理由としては、以前のブログの見た目が気に入らなかった（カスタマイズのコストが高い）ことと、vscodeとmarkdownでブログ書きたかったというのが主です。&lt;/p>
&lt;p>デプロイ先はNetlifyを使おうか悩んだのですが、ブログの目的がアウトプットの習慣付けが主で、アクセス数稼ぎに力を入れていないことと、普段業務でGitLabを使うことが多かったので、GitHub PagesやCICDをちょっと触ってみたいなというのもあり、ミニマムにGitHub Pagesで始めてみることにしました。後から乗り換えることもできなくはないですし。その場合ドメイン変わってしまいますが個人ブログでリスクもないので気の向くままにやっていく方針で😌&lt;/p>
&lt;p>既存のブログと記事は特にexportせずそのまま残しておく予定です。（もしかしたら戻る可能性もなくはないので）&lt;/p>
&lt;p>これからもマイペースに続けていきたいと思います。&lt;/p>
&lt;p>&lt;a class="link" href="https://reiichii.hateblo.jp/" target="_blank" rel="noopener"
>以前のブログ&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://reiichii.github.io/post/2022-05-27-16/IMG_8179.jpg"
width="2448"
height="1471"
srcset="https://reiichii.github.io/post/2022-05-27-16/IMG_8179_hu05940ea99d8537e6bd20faf24b516d8b_1077440_480x0_resize_q75_box.jpg 480w, https://reiichii.github.io/post/2022-05-27-16/IMG_8179_hu05940ea99d8537e6bd20faf24b516d8b_1077440_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="こないだ食べたコース料理のデザートの羊モナカ可愛かった"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="399px"
>&lt;/p></description></item><item><title>Archives</title><link>https://reiichii.github.io/page/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://reiichii.github.io/page/archives/</guid><description/></item><item><title>Search</title><link>https://reiichii.github.io/page/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reiichii.github.io/page/search/</guid><description/></item></channel></rss>